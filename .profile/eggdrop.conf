# where user, chan, note & info files will be stored, example "FILES/"
set store-path ""

# user, chan, note & info files. You can specify you own name for each file
# by default, the will take BOT's username as name
set userfile "${store-path}${username}.user"
set chanfile "${store-path}${username}.chan"
set notefile "${store-path}${username}.notes"
set infofile "${store-path}${username}.info"

# if no IRC network is specified in botnick.conf - by default UNDERTNET will be chosen
# NO NEED TO EDIT - setup the network in botnick.conf
if {![info exists network]  || $network == "unknown-net"}  {set network "UNDERNET"}

# a code, which will chose the net-type to suit the selected network
if { [string match -nocase $network undernet] } { set net-type 2} elseif {
     [string match -nocase $network quakenet] } { set net-type 5; set nick-len 15; set servers {us.quakenet.org irc.quakenet.org}} elseif {
     [string match -nocase $network efnet]    } { set net-type 0; set nick-len 9; set servers {irc.eu.efnet.info irc.efnet.net}} elseif {
     [string match -nocase $network dalnet]   } { set net-type 3} else {
						  set net-type 5
} 

# if no IRC servers are specified - by default UNDERNET servers will be selected
# NO NEED TO EDIT - setup the servers in botnick.conf
if {![info exists servers]  || $servers == ""} {
	set servers {
		134.60.4.198:6667
		49.204.56.254:6667
		134.60.4.198:6667

	}
}

# standard eggdrop file, feel free to customise/edit
set nick-len 12
set timezone "CET"
set offset "0"
set env(TZ) "$timezone $offset"
set max-logs 50
set max-logsize 999
set quick-logs 1
    logfile cobs * "logs/${username}.log"
set log-time 1
set keep-all-logs 1
set logfile-suffix ".%d%b%Y"
set switch-logfiles-at 300
set quiet-save 0
set console "mcobs"
set sort-users 1
set help-path "help/"
set text-path "text/"
set temp-path "tmp/"
set motd      "text/motd"
set telnet-banner "text/banner"
set userfile-perm 0600
set remote-boots 0
set share-unlinks 0
set protect-telnet 0
set dcc-sanitycheck 1
set ident-timeout 20
set require-p 0
set open-telnets 0
set stealth-telnets 0
set use-telnet-banner 0
set connect-timeout 30
set dcc-flood-thr 7
set telnet-flood 6:60
set paranoid-telnet-flood 1
set resolve-timeout 60
set ignore-time 5
set hourly-updates 00
set notify-newusers "$owner"
set default-flags ""
set must-be-owner 1
set max-dcc 99
set allow-dk-cmds 1
set dupwait-timeout 5
set mod-path "modules/"
    loadmodule dns
    loadmodule channels
set ban-time 0
set exempt-time 0
set invite-time 60
set force-expire 0
set share-greet 0
set use-info 1
    loadmodule server
set default-port 6667
set keep-nick 1
set strict-host 1
set quiet-reject 0
set lowercase-ctcp 1
set never-give-up 1
set strict-servernames 0
set server-cycle-wait 60
set server-timeout 30
set servlimit 0
set check-stoned 1
set use-console-r 1
set debug-output 1
set serverror-quit 0
set max-queue-msg 300
set trigger-on-ignore 0
set double-mode 0
set double-server 0
set double-help 0
set optimize-kicks 1
set stack-limit 6
    loadmodule ctcp
set ctcp-mode 1
    loadmodule irc
set bounce-bans 1
set bounce-modes 0
set max-bans 45
set max-modes 45
set kick-fun 1
set ban-fun 1
set learn-users 0
set wait-split 600
set wait-info 180
set mode-buf-length 200
set no-chanrec-info 0
    loadmodule transfer
set max-dloads 10
set dcc-block 1024
set copy-to-tmp 1
set xfer-timeout 30
    loadmodule share
set allow-resync 0
set private-global 0
set private-user 0
set override-bots 0
    loadmodule compress
set share-compressed 1
set compress-level 9
    loadmodule notes
set max-notes 50
set note-life 60
set allow-fwd 1
set notify-users 0
set notify-onjoin 1
    loadmodule console
set console-autosave 1
set force-channel 0
set info-party 0
    loadmodule blowfish
    loadmodule assoc
    loadmodule wire
source scripts/action.fix.tcl
source scripts/http.tcl
source scripts/alltools.tcl
source scripts/action.fix.tcl
source scripts/auth.tcl
source scripts/dns.tcl
source scripts/ssh.tcl
source scripts/leave.tcl
source scripts/vorbeste.tcl
source scripts/welcome.tcl
source scripts/optools.tcl
source scripts/antinotice.tcl
source scripts/blacklist.tcl
source scripts/learn.tcl
source scripts/csc.tcl
source scripts/bomba.tcl
source scripts/next.tcl
source scripts/mc.spamcheck.tcl
source scripts/seen.tcl
source scripts/sal.tcl
source scripts/antiswear.tcl
source scripts/joinpart.tcl
source scripts/greet.tcl
source scripts/whois.tcl
source scripts/antictcp.tcl
source scripts/thanks.tcl
source scripts/antitake.tcl
source scripts/quotepass.tcl
source scripts/injura.tcl
source scripts/private.tcl
source scripts/gline.tcl
source scripts/vip.tcl
source scripts/horoscop.tcl
source scripts/away.tcl
source scripts/flyby.tcl
source scripts/blackjack.tcl
source scripts/youtube.tcl
source scripts/strictop.tcl
source scripts/youtube_title.tcl
source scripts/BlackTools.tcl
source scripts/man.tcl
source scripts/nmap.tcl
source scripts/ip.tcl


# a code, which will check if 'tmp' & 'store-path' folders are created,
# otherwise they will be created by bot
# NO NEED TO EDIT
if {![file isdirectory ${temp-path}]  && ${temp-path} != ""} {file mkdir ${temp-path}}
if {![file isdirectory ${store-path}] && ${store-path} != ""} {file mkdir ${store-path}}
